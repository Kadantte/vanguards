services:
    app: &app-service
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www:ro
            - laravel_storage:/var/www/storage
        networks:
            - laravel
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        environment:
            - APP_ENV=${APP_ENV:-production}
            - APP_DEBUG=${APP_DEBUG:-false}
            - APP_KEY=${APP_KEY}
            - APP_URL=${APP_URL:-http://localhost}
            - SSH_PASSPHRASE=${SSH_PASSPHRASE}
            - LOG_LEVEL=${LOG_LEVEL:-error}
            - DB_CONNECTION=pgsql
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_DATABASE=${DB_DATABASE:-vanguard}
            - DB_USERNAME=${DB_USERNAME:-postgres}
            - DB_PASSWORD=${DB_PASSWORD:-password}
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
            - REVERB_APP_KEY=${REVERB_APP_KEY:-default_reverb_app_key}
            - REVERB_APP_SECRET=${REVERB_APP_SECRET:-default_reverb_app_secret}
            - REVERB_HOST=${REVERB_HOST:-reverb}
            - REVERB_PORT=${REVERB_PORT:-8080}
            - REVERB_SCHEME=${REVERB_SCHEME:-https}
            - REVERB_SERVER_HOST=${REVERB_SERVER_HOST:-0.0.0.0}
            - REVERB_SERVER_PORT=${REVERB_SERVER_PORT:-8080}
            - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-}
            - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-}
            - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID:-}
            - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET:-}
            - ENABLE_DEVICE_AUTH_ENDPOINT=${ENABLE_DEVICE_AUTH_ENDPOINT:-false}
            - USER_REGISTRATION_ENABLED=${USER_REGISTRATION_ENABLED:-true}
        env_file:
            - .env

    webserver:
        image: nginx:alpine
        container_name: laravel_webserver
        restart: unless-stopped
        ports:
            - "${NGINX_HTTP_PORT:-80}:80"
            - "${NGINX_HTTPS_PORT:-443}:443"
        volumes:
            - ./:/var/www:ro
            - laravel_storage:/var/www/storage:ro
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./docker/nginx/ssl:/etc/nginx/ssl:ro
        networks:
            - laravel
        depends_on:
            - app

    postgres:
        image: postgres:15-alpine
        container_name: laravel_db
        restart: unless-stopped
        environment:
            - POSTGRES_DB=${DB_DATABASE:-vanguard}
            - POSTGRES_USER=${DB_USERNAME:-postgres}
            - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
        volumes:
            - dbdata:/var/lib/postgresql/data
        networks:
            - laravel
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${DB_USERNAME:-postgres}"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:alpine
        container_name: laravel_redis
        restart: unless-stopped
        command: redis-server /usr/local/etc/redis/redis.conf
        volumes:
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
        networks:
            - laravel
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    horizon:
        <<: *app-service
        container_name: laravel_horizon
        command: php artisan horizon

    scheduler:
        <<: *app-service
        container_name: laravel_scheduler
        command: /bin/sh -c "while :; do php /var/www/artisan schedule:run --verbose --no-interaction & sleep 60; done"

    reverb:
        <<: *app-service
        container_name: laravel_reverb
        command: php artisan reverb:start --host=0.0.0.0 --port=8080 --no-interaction
        ports:
            - "${REVERB_PORT:-8080}:8080"

networks:
    laravel:
        driver: bridge

volumes:
    dbdata:
        driver: local
    laravel_storage:
        driver: local
